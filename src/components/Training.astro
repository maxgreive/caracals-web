---
import { getEntry } from "astro:content";

const { frontmatter } = Astro.props;
const data = getEntry("pages", "training");
---
<section id="training" class="relative bg-black pb-20 pt-32 md:pb-24 lg:pb-24 xl:pt-24">
  <div class="mx-auto max-w-7xl px-6 lg:px-12 xl:px-6 2xl:px-0">
    <div class="flex flex-wrap items-center gap-6">
      <h2 class="text-7xl font-bold text-white xl:text-8xl">Sei dabei!</h2>
      <span class="h-max rounded-full border border-white/40 px-2 py-1 text-xs tracking-wider text-white">03 Dates</span>
    </div>
    <div class="mt-24">
      <div>
        <div class="grid gap-12 sm:grid-cols-2 xl:grid-cols-3">
          <div>
            <div class="group border-b border-white/30 pb-8 cursor-pointer" tabindex="0" aria-expanded="false">
              <div class="flex flex-col gap-4 divide-y divide-white/30">
                <span class="inline-block text-white/60">001</span>
                <h3 class="bg-black pt-6 text-3xl text-white">Sommer Training</h3>
              </div>
              <div class="mt-0 overflow-hidden transition-all duration-500 group-hover:mt-8 toggle-mt">
                <p class="max-h-0 font-light text-white/70 transition-all duration-500 group-hover:max-h-24 toggle-maxh-24 md:text-xl">
                  Montag & Mittwoch, 19:00 h<br />
                  <a href="https://maps.app.goo.gl/aT5ThUaytgMvgvkk9" target="_blank">
                    Am Freudenberg 5<br />
                    42119 Wuppertal
                  </a>
                </p>
              </div>
            </div>
          </div>
          <div>
            <div class="group border-b border-white/30 pb-8 cursor-pointer" tabindex="0" aria-expanded="false">
              <div class="flex flex-col gap-4 divide-y divide-white/30">
                <span class="inline-block text-white/60">002</span>
                <h3 class="bg-black pt-6 text-3xl text-white">Winter Training</h3>
              </div>
              <div class="flex justify-between mt-0 overflow-hidden transition-all duration-500 group-hover:mt-8 toggle-mt">
                <div class="max-h-0 font-light text-white/70 transition-all duration-500 group-hover:max-h-48 toggle-maxh-48 md:text-lg">
                  Montag, 20:00 Uhr<br />
                  <a href="https://maps.app.goo.gl/aT5ThUaytgMvgvkk9" target="_blank">
                    Kunstrasen Outdoor<br />
                    Am Freudenberg 5<br />
                    42119 Wuppertal
                  </a>
                </div>
                <div class="max-h-0 font-light text-white/70 transition-all duration-500 group-hover:max-h-48 toggle-maxh-48 md:text-lg">
                  Mittwoch, 20:00 h<br />
                  <a href="https://maps.app.goo.gl/pZnkCobq3tge9RTt9" target="_blank">Sporthalle GS Barmen<br />
                  Unterd√∂rnen 1<br />
                  42283 Wuppertal</a>
                </div>
              </div>
            </div>
          </div>
          <div>
            <div class="group border-b border-white/30 pb-8 cursor-pointer" tabindex="0" aria-expanded="false">
              <div class="flex flex-col gap-4 divide-y divide-white/30">
                <span class="inline-block text-white/60">003</span>
                <h3 class="bg-black pt-6 text-3xl text-white">Junior Training</h3>
              </div>
              <div class="mt-0 overflow-hidden transition-all duration-500 group-hover:mt-8 toggle-mt">
                <p class="max-h-0 font-light text-white/70 transition-all duration-500 group-hover:max-h-24 toggle-maxh-24 md:text-xl">
                  Sapiente, rem debitis obcaecati facilis earum repudiandae enim ratione nihil iusto ea. Officia sint perspiciatis ad ducimus qui.
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<script type="module">
  // Enable touch/click and keyboard toggling for .group items so group-hover effects work on mobile
  document.querySelectorAll('#training .group').forEach((grp) => {
    const shouldIgnore = (el) => el.closest && el.closest('a');

    const toggle = (evt) => {
      // If clicking a link inside, don't toggle
      if (shouldIgnore(evt.target)) return;
      grp.classList.toggle('is-open');
      grp.setAttribute('aria-expanded', grp.classList.contains('is-open') ? 'true' : 'false');
    };

    grp.addEventListener('click', toggle);
    grp.addEventListener('touchstart', (e) => { /* allow touch to trigger click handler */ }, { passive: true });
    grp.addEventListener('keydown', (e) => {
      if (e.key === 'Enter' || e.key === ' ') {
        e.preventDefault();
        toggle(e);
      }
    });
  });
</script>